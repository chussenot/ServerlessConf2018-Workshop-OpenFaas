---

- name: Read token from file
  include_vars: cfg/{{ cluster_name }}_token.yml

- set_fact:
    master_ip_address: "{{ master_ip_address_configured }}"
  when: master_ip_address_configured is defined
  tags:
    - master

- set_fact:
    master_ip_address: "{{ ansible_default_ipv4['address'] }}"
  when: master_ip_address_configured is not defined
  tags:
    - master

- name: Save master_ip_address
  shell: "echo master_ip_address{{ ':' }} {{ master_ip_address }} > cfg/{{ cluster_name }}_master_ip_address.yml"
  delegate_to: 127.0.0.1
  become: false
  tags:
    - master

- name: Copy the master configuration
  template:
    src: kubeadm_conf.yaml.j2
    dest: /home/pi/kubeadm_conf.yaml
  tags:
    - master

# https://www.ianlewis.org/en/how-kubeadm-initializes-your-kubernetes-master
- name: Initialize master
  shell: |
    kubeadm init --config /home/pi/kubeadm_conf.yaml
  register: master_init
  ignore_errors: true
  tags:
    - master
    - init

- debug:
    var: master_init.stdout_lines

- name: Create Kubernetes config directory
  file: path=/home/pi/.kube/ state=directory

- name: Copy admin.conf to Home directory
  when: master_init
  copy:
    src: "/etc/kubernetes/admin.conf"
    dest: "/home/pi/.kube/config"
    owner: pi
    group: pi
    mode: 0755
    remote_src: True

- name: Copy /etc/kubernetes/admin.conf on master to cfg/cluster_name_admin.conf
  when: master_init
  fetch:
    src: /etc/kubernetes/admin.conf
    dest: cfg/{{ cluster_name }}_admin.conf
    flat: true
  tags:
    - master
    - remote

# Implements Step 3 of http://kubernetes.io/docs/getting-started-guides/kubeadm/
# (3/4) Installing a pod network

- name: Install pod network
  command: kubectl --kubeconfig /etc/kubernetes/admin.conf apply -f https://git.io/weave-kube-1.6
  register: pod_network
  tags:
    - master
    - network
  ignore_errors: true

- debug:
    var: pod_network.stdout_lines

# - name: Wait for Kube-DNS pod running
#   shell: "kubectl --kubeconfig /etc/kubernetes/admin.conf get pods --all-namespaces | grep kube-dns"
#   register: result
#   until: result.stdout.find("Running") != -1
#   retries: 30
#   delay: 10
#   tags:
#     - master
#     - network

# Install the k8s dashboard
- include_tasks: dashboard.yml
# Clone the faas-netes git repository
- include_tasks: openfaas.yml
